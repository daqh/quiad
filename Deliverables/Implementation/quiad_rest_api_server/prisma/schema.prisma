generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id         Int          @id @default(autoincrement())
  email      String       @unique
  username   String       @unique
  password   String
  user       User?
  supervisor Supervisor?
}

model Role {
  id           Int          @id @default(autoincrement())
  name         String       @unique
  capabilities Capability[]
  user         User[]
}

model Operation {
  id         Int          @id @default(autoincrement())
  name       String
  capabilities Capability[]
}

model Capability {
  operationId Int
  operation   Operation @relation(fields: [operationId], references: [id])
  roleId      Int
  role        Role      @relation(fields: [roleId], references: [id])

  @@id([operationId, roleId])
}

model User {
  id        Int       @id @default(autoincrement())
  residence String
  account   Account   @relation(fields: [accountId], references: [id])
  role      Role      @relation(fields: [roleId], references: [id])
  node      Node      @relation(fields: [nodeId], references: [id])
  accountId Int       @unique
  roleId    Int
  nodeId    Int       @unique
  curator   Curator?
}

model Category {
  id          Int    @id @default(autoincrement())
  description String
}

enum Sex {
  MALE
  FEMALE
}

model Node {
  id                Int       @id @default(autoincrement())
  firstname         String?
  lastname          String?
  birthdate         DateTime?
  deathdate         DateTime?
  birthplace        String?
  deathplace        String?
  sex               Sex
  user              User?
  motherId          Int?
  mother            Node?     @relation("mother", fields: [motherId], references: [id])
  motherHasChildren Node[]    @relation("mother")
  fatherId          Int?
  father            Node?     @relation("father", fields: [fatherId], references: [id])
  fatherHasChildren Node[]    @relation("father")
}

model Curator {
  phone      String
  fax        String
  occupation String
  userId     Int    @id
  user       User   @relation(fields: [userId], references: [id])
}

model Supervisor {
  firstname  String
  lastname   String
  birthdate  DateTime
  birthplace String
  sex        Sex
  accountId  Int      @id
  account    Account  @relation(fields: [accountId], references: [id])
}

model Document {
  id   Int    @id @default(autoincrement())
  path String
}
